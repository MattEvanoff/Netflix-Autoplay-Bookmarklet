Netflix Autoplay Bookmarklet

This thing is pretty simple it lets you autoplay the next episode of a show while watching it on Netflix.  It is a bookmarklet, and as such, all the comments need to be removed, and it needs to be minified a bit before it will work.  Last time I used this:
http://www.zenoplex.jp/tools/javascript_packer.html 
unfortunately bookmarklets need minification that is a bit more special than normal javascript, but this one seems to be doing the job.

Currently the minified code is:

javascript:(function(netflix,undefined){var seasonId=0,episodeId=0,numWatched=0,numToWatch=3,epIdRegex=/,EpisodeMovieId=\d*,/,idregx=/\d+/,done=false,sl,init,currrentEpisodeId,currentMovieId,seasons,showData,waitTimer,node;if(!netflix||!netflix.Silverlight||!netflix.Silverlight.MoviePlayer||!netflix.Silverlight.MoviePlayer.getPlugin()||!netflix.Silverlight.MoviePlayer.getPlugin().settings.initParams){alert('You do not appear to have a show playing, please start a show first');return;}sl=netflix.Silverlight.MoviePlayer.getPlugin().getScriptInterface();init=netflix.Silverlight.MoviePlayer.getPlugin().settings.initParams;currrentEpisodeId=parseInt(idregx.exec(epIdRegex.exec(init)),10);currentMovieId=parseInt(netflix.Silverlight.MoviePlayer.getPlugin().settings.movieId,10);var autoplayElement=document.getElementById('NetflixAutoplay');if(autoplayElement){alert('You have already loaded the autoplay bookmarklet, click the text at the botton to change number of episodes.');return;}try{showData=JSON.parse(decode64(netflix.Silverlight.MoviePlayer.getPlugin().settings.metadata));}catch(e){alert('Error processing data =(');return;}if(showData.Movie){alert('This appears to be a movie not a TV show.  This bookmarklet only works on TV show.');return;}seasons=showData.Show.Seasons;for(seasonId=0;seasonId<seasons.length;seasonId++){for(episodeId=0;episodeId<seasons[seasonId].Episodes.length;episodeId++){if(seasons[seasonId].Episodes[episodeId].MovieId===currentMovieId||seasons[seasonId].Episodes[episodeId].MovieId===currrentEpisodeId){done=true;break;}}if(done){break;}}if(seasonId===seasons.length){alert('Error: Already of final episode, or episode data could not be found.');return;}function getNumberOfEpisodesToWatch(){var newNum;do {newNum=prompt('How many episodes would you like to play?',(numToWatch-numWatched));}while(isNaN(newNum));numWatched=0;numToWatch=parseInt(newNum,10);if(numToWatch>0){autoplayElement.innerHTML='Netflix autoplay on, Episodes left: '+numToWatch;}else{autoplayElement.innerHTML='Netflix autoplay off';}}node=document.createElement('span');autoplayElement=document.body.appendChild(node);autoplayElement.id='NetflixAutoplay';autoplayElement.innerHTML='Netflix autoplay on, Episodes left: '+numToWatch;autoplayElement.addEventListener('click',getNumberOfEpisodesToWatch,false);getNumberOfEpisodesToWatch();sl.OnMovieWatched=function(){if(numWatched<numToWatch&&!waitTimer){waitTimer=setTimeout(function(){var epp,numLeft;if(seasons[seasonId].Episodes[episodeId+1]){episodeId++;}else{episodeId=0;seasonId++;}if(seasons[seasonId]&&seasons[seasonId].Episodes[episodeId]){epp=seasons[seasonId].Episodes[episodeId];}if(epp){sl.PlayMovie({movieId:epp.MovieId,episodeMovieId:0,trackId:0});numWatched++;numLeft=numToWatch-numWatched;if(numLeft>0){autoplayElement.innerHTML='Netflix autoplay on, Episodes left: '+numLeft;}else{autoplayElement.innerHTML='Netflix autoplay completed.';}}clearTimeout(waitTimer);waitTimer=null;},2*60*1000);}};function decode64(input){var keyStr='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',output='',chr1,chr2,chr3='',enc1,enc2,enc3,enc4='',i=0,base64test=/[^A-Za-z0-9\+\/\=]/g;input=input.replace(base64test,'');do {enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=(enc1<<2)|(enc2>>4);chr2=((enc2&15)<<4)|(enc3>>2);chr3=((enc3&3)<<6)|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2);}if(enc4!=64){output=output+String.fromCharCode(chr3);}chr1=chr2=chr3='';enc1=enc2=enc3=enc4='';}while(i<input.length);return unescape(output);}})(window.netflix);

Some things I have considered adding:
* End-of-show timer length set
* Episode randomize
* Episode select/multiple show select

unfortunately I have not found a way to know for sure that the episode is done playing, so currently I am using a timer that waits the amount of time I have found it to take for most shows after the "OnMovieWatched" event is fired.  This is far from ideal, and at the very least letting people change this delay when they find their show is not right would be quite good.

Randomly selecting an episode would be pretty easy given that we have all of the episode data.  If perhaps a dialog or something was added, allow a user to select the episodes they want to watch should be pretty straightforward.

Using localStorage it would not be hard to store the information about any shows you autoplay.  This would make it easy (enough) to allow you to select episodes from any of them.

How this shit works:

As long as I am Githubing this, I suppose I should describe how it works.

The basics:

1a. First Netflix uses Silverlight for their player.

2a. Netflix has their own Javascript namespace "netflix".

3a. You can use the Netflix Javascript namespace to grab the Silverlight player.

There are several thing you can grab, but 
netflix.Silverlight.MoviePlayer.getPlugin().getScriptInterface();
is the most interesting.  It allows us to use Javascript to interact with the player.

1b. All Netflix videos have an ID (duh).

2b. If we know the ID of a movie, we can use 3a to tell the player to play it using:

'3a'.PlayMovie({movieId: MovieId, episodeMovieId: ???, trackId: ???});

I am not sure what the episodeMovieId or trackId do at the moment, perhaps they are there for future use?  For now I set them to 0 and that seems to work.  The movieId however, is what we are interested in.  If we set it to the ID of the video we want to play, it comes right up...now, now do we get that ID?

1c. Netflix sends all of the information we need every time we load up a show, this information is stored in 2a.

2c. netflix.Silverlight.MoviePlayer.getPlugin().settings.metadata gets us all of the information about a show in a base64 encoded string of JSON data.

...I Suppose I am proud, or maybe ashamed of the fact that it only took a glance for me to see that this data looked as though it was base64 encoded.

1d. We base64 decode the data from 2c, and we have all of the season/episode information about a show, with the IDs needed to make Sliverlight play them

2d. When a show/movie is near ending the Silverlight player fires off an event named "OnMovieWatched", we can hook into this using 3a, grab the ID for the next episode from 2c and away we go...except that it fires before the show is all the way over.  It seems to be about 2 minutes before, so I set a timer for 2 minutes and wait to change till then.